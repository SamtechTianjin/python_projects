#!/usr/bin/env python
#=============================Sugon test BMC NCSI Switch=================================
# Sugon Modified version v1.0
# Description:script will shutdown and up into dedicatelan and sharelan repeatedly ,and ping Bond IP and report link time (ncsi test)
# USAGE: python switch_test.py  <-d dedicatelan > < -s sharelan > < -i bond ip > < -t run time >
# AUTHOR: Yanshupeng
# CREATED: 04/15/2017
#==============================================================================================
from sugonSIT.config_handler import ConfigHandler
from sugonSIT.debugport import DebugPort
from sugonSIT.fs import *
import argparse
import time
# import os
# import re
import subprocess

count=0

ch = ConfigHandler('config.txt','=')
tty = ch.GetValue('tty')
dp1 = DebugPort(tty, logFile='./log/console.log')

PASS_BANNER = """
########     ###     ######   ######     #### ####
##     ##   ## ##   ##    ## ##    ##    #### ####
##     ##  ##   ##  ##       ##          #### ####
########  ##     ##  ######   ######      ##   ##
##        #########       ##       ##
##        ##     ## ##    ## ##    ##    #### ####
##        ##     ##  ######   ######     #### ####
"""

FAIL_BANNER = """
########    ###    #### ##          #### ####
##         ## ##    ##  ##          #### ####
##        ##   ##   ##  ##          #### ####
######   ##     ##  ##  ##           ##   ##
##       #########  ##  ##
##       ##     ##  ##  ##          #### ####
##       ##     ## #### ########    #### ####
"""

#==============================================================================================
#The function is showing pass and fail messages
#==============================================================================================
def print_green(msg):
    print '\033[32;1m%s\033[0m'%(msg)

def print_red(msg):
    print '\033[31;1m%s\033[0m'%(msg)

#==============================================================================================
#The function is check switch Authority  
#==============================================================================================
def check_prompt():
    while True:
        dp1.Send('')
        recv = dp1.Recv()
        print recv[0]
        if recv[0] == 'Ruijie>':
            print '- Enter to Privilege mode : -'
            dp1.Send('enable')
            continue
        elif recv[0] == 'Ruijie#':
            print '- Current is Privilege mode : -'
            output= '---Current Switch is Privilege mode ---'
            with open("log/NCSI_Switch.log", "a") as text_file:
                text_file.write(output)
                text_file.write('\n')
            return 0
        elif recv[0] == 'Ruijie(config)#':
            dp1.Send('exit')
        else:
            dp1.Send('enable')
            continue

#==============================================================================================
#The function is shutdown and up console in switch   
#==============================================================================================
def login_switch():
    print '- Enter switch and Begin shutdown/up Port -...'
    cmd_int_a = 'interface gigabitEthernet 0/' + str(dedicatelan)
    global mode 
    if mode == 'L' :
        cmd_int_b = 'interface gigabitEthernet 0/' + str(sharelan)
    elif mode == 'H' :
        cmd_int_b = 'interface TenGigabitEthernet 0/' + str(sharelan)
    else :
        print_red("Please input mode is ..........H or L ")
        sys.exit(1) 
    #cmd_int_a = 'interface gigabitEthernet 0/2 '
    #cmd_int_b = 'interface gigabitEthernet 0/3 '
    current_time = int(time.time())
    end_time= int(current_time) + int(times)
    ping_cmd='ping -c 5 '+str(bondip)+' >network_begin.log'
    ping_cmd_2='ping -c 20 '+str(bondip)+' >>network_sharelan.log'
    ping_cmd_3='ping -c 20 '+str(bondip)+' >>network_Dedicatelan.log'
    current=time.strftime('%m-%d,%H:%M:%S',time.localtime(time.time()))
    output = 'Current time is :' + str(current) + "," + "Dedicate lan and Share lan to begin to off/on"
    with open("log/NCSI_Switch.log", "a") as text_file:
        text_file.write(output)
        text_file.write('\n')
   
    while current_time < end_time :
        dp1.Send('enable')
        dp1.Send('conf')
        print '- Begin to Dedicatelan and Sharelan all on - '        
        dp1.Send(cmd_int_a)
        dp1.Send('no shutdown')
        dp1.Send('exit')
        dp1.Send(cmd_int_b)
        dp1.Send('no shutdown')
        dp1.Send('exit')
        print '- Dedicatelan and Sharelan all on -'
        current=time.strftime('%m-%d,%H:%M:%S',time.localtime(time.time()))
        output = 'Current time is :' + str(current) + "," + "- Dedicatelan and Sharelan all on - "
        with open("log/NCSI_Switch.log", "a") as text_file:
            text_file.write(output)
            text_file.write('\n')
        timeout_5s = 1
        for i in range(timeout_5s):
            print'"%s secs..."'% (5*(timeout_5s - i))
            time.sleep(5)
        print '- Begin to ping Bond IP - '
        with open("log/NCSI_Switch.log", "a") as text_file:
            output = '- Begin to ping Bond IP - '
            text_file.write(output)
            text_file.write('\n')
        subprocess.Popen(ping_cmd,shell=True)
        time.sleep(5)
        a=subprocess.Popen("cat network_begin.log | grep -i '5 packets transmitted, 0 received' > pingerror",shell=True)
        if  a.wait() == 0 :
            print 'BMC Bond ip unreached'
            with open("log/NCSI_Switch.log", "a") as text_file:
                current=time.strftime('%m-%d,%H:%M:%S',time.localtime(time.time()))
                output = 'Current time is : ' + str(current) +  ' - ping Bond IP unreached - '
                text_file.write(output)
                text_file.write('\n')
            print_red(FAIL_BANNER)
            sys.exit(1)
        global count
        count+=1
        print '-  Begin to shut down Dedicatelan - '
        dp1.Send(cmd_int_a)
        dp1.Send('shutdown')
        dp1.Send('exit')
        print '- Dedicatelan current is off -'
        sharelan_log='- Begin to shut down Dedicatelan but sharelan is on :'+str(count)
        file_object = open('network_sharelan.log', 'a+')
        file_object.write(sharelan_log)
        file_object.write('\n')
        file_object.close( )
        with open("log/NCSI_Switch.log", "a") as text_file:
            current=time.strftime('%m-%d,%H:%M:%S',time.localtime(time.time()))
            output = 'Current time is : ' + str(current) + ',' + str(sharelan_log)
            text_file.write(output)
            text_file.write('\n')
        subprocess.Popen(ping_cmd_2,shell=True)
        for i in range(timeout_5s):
            print'"%s secs..."'% (18*(timeout_5s - i))
            time.sleep(18)
        print '- Begin to shut down Sharelan and Open Dedicatelan -'
        dp1.Send(cmd_int_b)
        dp1.Send('shutdown')
        dp1.Send('exit')
        dp1.Send(cmd_int_a)
        dp1.Send('no shutdown')
        dp1.Send('exit')
        print '- Dedicatelan current is on ,Share lan is off -'
        Dedicatelan_log='- Begin to shut down sharelan but Dedicatelan is on :'+str(count)
        file_object = open('network_Dedicatelan.log', 'a+')
        file_object.write(Dedicatelan_log)
        file_object.write('\n')
        file_object.close( )
        with open("log/NCSI_Switch.log", "a") as text_file:
            current=time.strftime('%m-%d,%H:%M:%S',time.localtime(time.time()))
            output = 'Current time is : ' + str(current) + ',' + str(Dedicatelan_log)
            text_file.write(output)
            text_file.write('\n')
            text_file.close()
        subprocess.Popen(ping_cmd_3,shell=True)
        for i in range(timeout_5s):
            print'"%s secs..."'% (18*(timeout_5s - i))
            time.sleep(18)
        current_time=int(time.time())

#====================================MAIN==========================================
print '\033[1;32;40m'
print '*' * 70
print '***********************- BMC NCSI STRESS TEST -***********************'
print '***Please input -d (Dedicatelan num) -s (sharelan num) -i (bondip)-***'
print '****************-m (mode ,defalut is low speed) -r (run time) -*******'
print '*' * 70
print '\033[0m'

opts = argparse.ArgumentParser(description = "BMC NCSI switch test Tool, By Sugon SIT, Version: 1.0")
opts.add_argument('-v', '--version', action = 'version', version = "1.0", help = "Show Tool Version")
opts.add_argument('-d', '--dedicatelan', required = False, default = "", help = "Dedicatelan Number")
opts.add_argument('-s', '--share', required = False, default = "", help = "Sharelan Number")
opts.add_argument('-c', '--Com', required = False, default = "COM3", help = "COM Port")
opts.add_argument('-t','--time',required = False, default = "172800", help = "Run Time")
opts.add_argument('-i','--bondip',required = False, default = "",help = "Bond IP")
opts.add_argument('-m','--mode',required = False,default = "L",help = " Mode ")
args = opts.parse_args()
dedicatelan = args.dedicatelan
sharelan = args.share
COM_PORT = args.Com
times = int(args.time)
bondip = args.bondip
mode = args.mode
if bondip == "" or sharelan == "" or dedicatelan == "" or mode == "" :
    print '\033[1;31;40m ***Please input -d (Dedicatelan num) -s (sharelan num) -i (bondip) -m (mode)-***\033[0m'
    sys.exit(1)
current=time.strftime('%m-%d,%H:%M:%S',time.localtime(time.time()))
output = 'Current time is :' + str(current) + "," + "Begin test NCSI Switch "
with open("log/NCSI_Switch.log", "a") as text_file:
    text_file.write(output)
    text_file.write('\n')
output= 'dedicate lan num is : ' + str(dedicatelan) + "," + 'Share lan num is : ' + str(sharelan) + "," + 'Bond IP is : ' + str(bondip)+ "," + 'Mode is : ' + str(mode) 
with open("log/NCSI_Switch.log", "a") as text_file:
    text_file.write(output)
    text_file.write('\n')
check_prompt()
login_switch()
print_green(PASS_BANNER)
